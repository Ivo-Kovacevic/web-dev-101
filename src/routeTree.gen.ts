/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UvodUWebDevelopmentImport } from './routes/uvod-u-web-development'
import { Route as UvodULekcijuImport } from './routes/uvod-u-lekciju'
import { Route as KakoDaljeImport } from './routes/kako-dalje'
import { Route as JavascriptFrameworkoviImport } from './routes/javascript-frameworkovi'
import { Route as HtmlCssJavascriptImport } from './routes/html-css-javascript'
import { Route as GitGithubImport } from './routes/git-github'
import { Route as FrontendBackendImport } from './routes/frontend-backend'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const UvodUWebDevelopmentRoute = UvodUWebDevelopmentImport.update({
  id: '/uvod-u-web-development',
  path: '/uvod-u-web-development',
  getParentRoute: () => rootRoute,
} as any)

const UvodULekcijuRoute = UvodULekcijuImport.update({
  id: '/uvod-u-lekciju',
  path: '/uvod-u-lekciju',
  getParentRoute: () => rootRoute,
} as any)

const KakoDaljeRoute = KakoDaljeImport.update({
  id: '/kako-dalje',
  path: '/kako-dalje',
  getParentRoute: () => rootRoute,
} as any)

const JavascriptFrameworkoviRoute = JavascriptFrameworkoviImport.update({
  id: '/javascript-frameworkovi',
  path: '/javascript-frameworkovi',
  getParentRoute: () => rootRoute,
} as any)

const HtmlCssJavascriptRoute = HtmlCssJavascriptImport.update({
  id: '/html-css-javascript',
  path: '/html-css-javascript',
  getParentRoute: () => rootRoute,
} as any)

const GitGithubRoute = GitGithubImport.update({
  id: '/git-github',
  path: '/git-github',
  getParentRoute: () => rootRoute,
} as any)

const FrontendBackendRoute = FrontendBackendImport.update({
  id: '/frontend-backend',
  path: '/frontend-backend',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/frontend-backend': {
      id: '/frontend-backend'
      path: '/frontend-backend'
      fullPath: '/frontend-backend'
      preLoaderRoute: typeof FrontendBackendImport
      parentRoute: typeof rootRoute
    }
    '/git-github': {
      id: '/git-github'
      path: '/git-github'
      fullPath: '/git-github'
      preLoaderRoute: typeof GitGithubImport
      parentRoute: typeof rootRoute
    }
    '/html-css-javascript': {
      id: '/html-css-javascript'
      path: '/html-css-javascript'
      fullPath: '/html-css-javascript'
      preLoaderRoute: typeof HtmlCssJavascriptImport
      parentRoute: typeof rootRoute
    }
    '/javascript-frameworkovi': {
      id: '/javascript-frameworkovi'
      path: '/javascript-frameworkovi'
      fullPath: '/javascript-frameworkovi'
      preLoaderRoute: typeof JavascriptFrameworkoviImport
      parentRoute: typeof rootRoute
    }
    '/kako-dalje': {
      id: '/kako-dalje'
      path: '/kako-dalje'
      fullPath: '/kako-dalje'
      preLoaderRoute: typeof KakoDaljeImport
      parentRoute: typeof rootRoute
    }
    '/uvod-u-lekciju': {
      id: '/uvod-u-lekciju'
      path: '/uvod-u-lekciju'
      fullPath: '/uvod-u-lekciju'
      preLoaderRoute: typeof UvodULekcijuImport
      parentRoute: typeof rootRoute
    }
    '/uvod-u-web-development': {
      id: '/uvod-u-web-development'
      path: '/uvod-u-web-development'
      fullPath: '/uvod-u-web-development'
      preLoaderRoute: typeof UvodUWebDevelopmentImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/frontend-backend': typeof FrontendBackendRoute
  '/git-github': typeof GitGithubRoute
  '/html-css-javascript': typeof HtmlCssJavascriptRoute
  '/javascript-frameworkovi': typeof JavascriptFrameworkoviRoute
  '/kako-dalje': typeof KakoDaljeRoute
  '/uvod-u-lekciju': typeof UvodULekcijuRoute
  '/uvod-u-web-development': typeof UvodUWebDevelopmentRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/frontend-backend': typeof FrontendBackendRoute
  '/git-github': typeof GitGithubRoute
  '/html-css-javascript': typeof HtmlCssJavascriptRoute
  '/javascript-frameworkovi': typeof JavascriptFrameworkoviRoute
  '/kako-dalje': typeof KakoDaljeRoute
  '/uvod-u-lekciju': typeof UvodULekcijuRoute
  '/uvod-u-web-development': typeof UvodUWebDevelopmentRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/frontend-backend': typeof FrontendBackendRoute
  '/git-github': typeof GitGithubRoute
  '/html-css-javascript': typeof HtmlCssJavascriptRoute
  '/javascript-frameworkovi': typeof JavascriptFrameworkoviRoute
  '/kako-dalje': typeof KakoDaljeRoute
  '/uvod-u-lekciju': typeof UvodULekcijuRoute
  '/uvod-u-web-development': typeof UvodUWebDevelopmentRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/frontend-backend'
    | '/git-github'
    | '/html-css-javascript'
    | '/javascript-frameworkovi'
    | '/kako-dalje'
    | '/uvod-u-lekciju'
    | '/uvod-u-web-development'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/frontend-backend'
    | '/git-github'
    | '/html-css-javascript'
    | '/javascript-frameworkovi'
    | '/kako-dalje'
    | '/uvod-u-lekciju'
    | '/uvod-u-web-development'
  id:
    | '__root__'
    | '/'
    | '/frontend-backend'
    | '/git-github'
    | '/html-css-javascript'
    | '/javascript-frameworkovi'
    | '/kako-dalje'
    | '/uvod-u-lekciju'
    | '/uvod-u-web-development'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FrontendBackendRoute: typeof FrontendBackendRoute
  GitGithubRoute: typeof GitGithubRoute
  HtmlCssJavascriptRoute: typeof HtmlCssJavascriptRoute
  JavascriptFrameworkoviRoute: typeof JavascriptFrameworkoviRoute
  KakoDaljeRoute: typeof KakoDaljeRoute
  UvodULekcijuRoute: typeof UvodULekcijuRoute
  UvodUWebDevelopmentRoute: typeof UvodUWebDevelopmentRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FrontendBackendRoute: FrontendBackendRoute,
  GitGithubRoute: GitGithubRoute,
  HtmlCssJavascriptRoute: HtmlCssJavascriptRoute,
  JavascriptFrameworkoviRoute: JavascriptFrameworkoviRoute,
  KakoDaljeRoute: KakoDaljeRoute,
  UvodULekcijuRoute: UvodULekcijuRoute,
  UvodUWebDevelopmentRoute: UvodUWebDevelopmentRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/frontend-backend",
        "/git-github",
        "/html-css-javascript",
        "/javascript-frameworkovi",
        "/kako-dalje",
        "/uvod-u-lekciju",
        "/uvod-u-web-development"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/frontend-backend": {
      "filePath": "frontend-backend.tsx"
    },
    "/git-github": {
      "filePath": "git-github.tsx"
    },
    "/html-css-javascript": {
      "filePath": "html-css-javascript.tsx"
    },
    "/javascript-frameworkovi": {
      "filePath": "javascript-frameworkovi.tsx"
    },
    "/kako-dalje": {
      "filePath": "kako-dalje.tsx"
    },
    "/uvod-u-lekciju": {
      "filePath": "uvod-u-lekciju.tsx"
    },
    "/uvod-u-web-development": {
      "filePath": "uvod-u-web-development.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
